<Window x:Class="MagiCarver.MainWindow" x:Name="main"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:MagiCarver.Converters;assembly="
    SizeToContent="WidthAndHeight" ResizeMode="NoResize"
    Loaded="Window_Loaded">
    
    <Window.Resources>
        <converters:BooleanCanOperateToColorConverter x:Key="BooleanCanOperateToColor" />
    </Window.Resources>
    
   
    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Loaded="RowDefinition_Loaded" />
            <RowDefinition Loaded="RowDefinition_Loaded" />
            <RowDefinition />
            <RowDefinition Loaded="RowDefinition_Loaded" />
        </Grid.RowDefinitions>
        
        <Menu x:Name="theMenu">
            <MenuItem Header="_File">
                <MenuItem Header="_Open Image" Click="OpenFile_Clicked"/>
                <MenuItem x:Name="menuItemSaveImage" Header="_Save Image" IsEnabled="False" Click="SaveImage_Click"/>
                <MenuItem Header="_Exit" Click="Exit_Click"/>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Direction">
                    <MenuItem Header="_Vertical"  IsChecked="True" IsCheckable="True" Tag="0" Click="ChangeDirection_Clicked" />
                    <MenuItem Header="_Horizontal" IsCheckable="True" Tag="1" Click="ChangeDirection_Clicked" />
                    <MenuItem Header="_Optimal" IsEnabled="False" IsCheckable="True" Tag="2" Click="ChangeDirection_Clicked" />
                </MenuItem>
                <MenuItem Header="_Cache Limit">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <WrapPanel>
                            <Label Content="Current:" />
                            <Label>
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Setter Property="Content" Value="{Binding ElementName=cacheSlider, Path=Value}"/>
                                        <Style.Triggers>
                                            <DataTrigger  Binding="{Binding ElementName=cacheSlider, Path=Value}" Value="0">
                                                <Setter Property="Content" Value="Real Time"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                        </WrapPanel>
                        <Label Grid.Row="1" Content="Real Time"/>
                        <Slider ValueChanged="cacheSlider_ValueChanged" Value="{Binding ElementName=main, Path=TheImage.CacheLimit}" Grid.Row="2" IsEnabled="False" IsSnapToTickEnabled="True" x:Name="cacheSlider" MinHeight="100" Orientation="Vertical" IsDirectionReversed="True" Minimum="0" AutoToolTipPlacement="BottomRight" TickPlacement="TopLeft"/>
                        <Label Grid.Row="3" Content="{Binding ElementName=cacheSlider, Path=Maximum}"/>
                        <Button Grid.Row="4" x:Name="BtnCacheApply" IsEnabled="False" Content="Apply" Click="CacheLimitButton_Clicked"/>
                    </Grid>
                </MenuItem>
                <MenuItem Header="_Energy Function">
                    <MenuItem x:Name="menuItemSobelFnc" Header="Sobel" IsCheckable="True" IsChecked="True"  Tag="0" IsEnabled="False" Click="ChangeEnergyFunc_Clicked"/>
                    <MenuItem x:Name="menuItemRobertsFunc" Header="Roberts" IsCheckable="True" Tag="1" IsEnabled="False" Click="ChangeMapView_Clicked"/>
                    <MenuItem x:Name="menuItemPrewittFunc" Header="Prewitt" Tag="2" IsCheckable="True" IsEnabled="False" Click="ChangeMapView_Clicked"/>
                </MenuItem>
                <MenuItem x:Name="menuItemPaintSeam" Header="_Paint Seam" IsEnabled="False" IsCheckable="True" IsChecked="False" Click="PaintSeam_Clicked"/>
                <MenuItem x:Name="menuItemCarve" Header="_Carve Seam" FontWeight="bold" IsEnabled="False" Click="Carve_Clicked"/>
                <MenuItem x:Name="menuItemAddSeam" Header="_Add Seam" FontWeight="bold" IsEnabled="False" Click="AddSeam_Clicked"/>
            </MenuItem>
            <MenuItem Header="_View">
                <MenuItem x:Name="menuItemNormal" Header="_Normal" IsCheckable="True" Tag="0" IsEnabled="False" Click="ChangeMapView_Clicked"/>
                <MenuItem x:Name="menuItemEnergyMap" Header="_Energy Map" IsCheckable="True" Tag="1" IsEnabled="False" Click="ChangeMapView_Clicked"/>
                <MenuItem x:Name="menuItemHorizontalIdxMap" Header="_Horizontal Index Map" Tag="2" IsCheckable="True" IsEnabled="False" Click="ChangeMapView_Clicked"/>
                <MenuItem x:Name="menuItemVerticalIdxMap" Header="_Vertical Index Map" Tag="3" IsCheckable="True" IsEnabled="False" Click="ChangeMapView_Clicked"/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem x:Name="menuItemAbout" Header="_About" Click="About_Clicked"/>
            </MenuItem>
        </Menu>
        
        <ToolBar x:Name="theToolbar" Grid.Row="1" Background="Transparent">
            <ToggleButton x:Name="ToggleHighEng" ToolTip="High Energy Brush" MaxHeight="30" MaxWidth="30" Click="ToggleBrush_Clicked" IsEnabled="False">
                <Image>
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="Source" Value="Resources\high_eng.png"/>
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.3"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </ToggleButton>
            <ToggleButton x:Name="ToggleLowEng" ToolTip="Low Energy Brush" MaxHeight="30" MaxWidth="30" Click="ToggleBrush_Clicked" IsEnabled="False">
                <Image>
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="Source" Value="Resources\low_eng.png"/>
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.3"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </ToggleButton>
            <Button x:Name="DoneEditingButton" ToolTip="Done Editing" MaxHeight="30" MaxWidth="30" IsEnabled="False" Click="DoneEditing_Clicked">
                <Image>
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="Source" Value="Resources\accept.png"/>
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.3"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
            <Separator/>
            <ToggleButton x:Name="ToggleSelection" ToolTip="Selection Tool" MaxHeight="30" MaxWidth="30" Click="ToggleSelection_Clicked" IsEnabled="False">
                <Image>
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="Source" Value="Resources\selection.png"/>
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.3"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </ToggleButton>
            <Button x:Name="CropSelectionButton" ToolTip="Crop Selection" MaxHeight="30" MaxWidth="30" IsEnabled="False" Click="CropSelection_Clicked">
                <Image>
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="Source" Value="Resources\crop.png"/>
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.3"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
            <Separator/>
            <WrapPanel Margin="5 0 0 0">
                <TextBlock Margin="0 5 0 0" Text="Seams: "/>
                <Slider  ToolTip="Number of Seams to Carve or Add" Margin="0 2 0 0" AutoToolTipPlacement="BottomRight" TickFrequency="5" TickPlacement="BottomRight" Minimum="0" Maximum="50" Value="20" MinWidth="100" MaxWidth="500" ValueChanged="Slider_ValueChanged" IsEnabled="{Binding ElementName=CarveButton, Path=IsEnabled}"/>
                <Button Margin="5 0 0 0" x:Name="CarveButton" ToolTip="Carve Seams" MaxHeight="30" MaxWidth="30" IsEnabled="False" Click="Carve_Clicked">
                    <Image>
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Source" Value="Resources\carve.png"/>
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.3"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
                <Button Margin="5 0 0 0" x:Name="AddButton" ToolTip="Add Seams" MaxHeight="30" MaxWidth="30" IsEnabled="False" Click="AddSeam_Clicked">
                    <Image>
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Source" Value="Resources\add.png"/>
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.3"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
            </WrapPanel>
        </ToolBar>

            <InkCanvas Grid.Row="2" Width="100" Height="100" IsEnabled="true" x:Name="theCanvas" Initialized="InkCanvas_Initialized">
                <InkCanvas.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Clear Selection" Click="ClearSelection_Click"/>
                    </ContextMenu>
                </InkCanvas.ContextMenu>
            <Rectangle Fill="#14FFFFFF" StrokeDashArray="5" Stroke="#FFFFFFFF"
                       Visibility="Hidden" x:Name="rectangle" Width="50" Height="50" 
                       StrokeDashOffset="0" StrokeThickness="1" RadiusX="0" RadiusY="0"
                       Canvas.Left="0" Canvas.Top="0">
                <Rectangle.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" 
                               Storyboard.TargetName="rectangle" 
                               Storyboard.TargetProperty="(Shape.StrokeDashOffset)" 
                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="10"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Rectangle.Triggers>
            </Rectangle>
            <Image x:Name="theImage"/>
            <Thumb Name="myThumb" InkCanvas.Left="85" InkCanvas.Top="85"
                   Width="15" Height="15" DragDelta="onDragDelta" 
                   DragStarted="onDragStarted" DragCompleted="onDragCompleted" Visibility="Hidden" SizeChanged="myThumb_SizeChanged" Background="{Binding ElementName=main, Path=CanOperate, Converter={StaticResource BooleanCanOperateToColor}}">
                <Thumb.Triggers>
                    <EventTrigger RoutedEvent="Thumb.MouseEnter">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard Duration="0:0:1">
                                    <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="LawnGreen"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Thumb.MouseLeave">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard Duration="0:0:1">
                                    <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="Yellow"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Thumb.Triggers>
                <Thumb.Style>
                    <Style TargetType="Thumb">
                        <Setter Property="Opacity" Value="0.3"/>
                        <Style.Triggers>
                            <Trigger Property="Thumb.IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard Duration="0:0:1">
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.3" To="1"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Width" From="15" To="30"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Height" From="15" To="30"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard Duration="0:0:1">
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Width" From="30" To="15"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Height" From="30" To="15"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Thumb.Style>
            </Thumb>
        </InkCanvas>

        <StatusBar x:Name="theStatusBar" Grid.Row="3">
            <StatusBarItem>
                <TextBlock x:Name="txtStatus" Text="Ready" />
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock x:Name="txtResolution" Text="No image loaded" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
